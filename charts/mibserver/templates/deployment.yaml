{{- $createPV := and .Values.localMibs.pathToMibs (eq .Values.localMibs.persistence.existingClaim "") }}
{{- $enablePV := or $createPV (ne .Values.localMibs.persistence.existingClaim "") }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "mibserver.fullname" . }}
  labels:
    {{- include "mibserver.labels" . | nindent 4 }}
  annotations:
    "kube-score/ignore": "container-image-pull-policy"
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "mibserver.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "mibserver.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "mibserver.serviceAccountName" . }}
      securityContext:
        fsGroup: 10001
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            capabilities:
              drop:
                - ALL
            {{- if $enablePV }}
            readOnlyRootFilesystem: false
            {{- else }}
            readOnlyRootFilesystem: true
            {{- end }}
            runAsNonRoot: true
            runAsUser: 10001
            runAsGroup: 10001
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: NGINX_ENTRYPOINT_QUIET_LOGS
              value: "1"
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
            - name: http-status
              containerPort: 8080
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /
              port: http-status
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - mountPath: /tmp
              name: tmp
          {{- if $enablePV }}
            - mountPath: "/app/new_mibs/src/vendor"
              name: task-pv-storage
          {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if eq (include "mibserver.podAntiAffinity" .) "hard" }}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - topologyKey: "kubernetes.io/hostname"
              labelSelector:
                matchLabels:
                    {{- include "mibserver.selectorLabels" . | nindent 22 }}
      {{- else if eq (include "mibserver.podAntiAffinity" .) "soft" }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              podAffinityTerm:
                topologyKey: kubernetes.io/hostname
                labelSelector:
                  matchLabels:
                    {{- include "mibserver.selectorLabels" . | nindent 22 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: tmp
          emptyDir: {}
          # Debug helper output
      {{- if $enablePV }}
        - name: task-pv-storage
          persistentVolumeClaim:
          {{- if .Values.localMibs.persistence.existingClaim }}
            claimName: {{ .Values.localMibs.persistence.existingClaim | quote }}
        {{ else }}
            claimName: {{ include "mibserver.fullname" . }}
        {{- end }}
        {{- end }}